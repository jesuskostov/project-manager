{"remainingRequest":"/home/jesuskostov/Desktop/willUse/project-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jesuskostov/Desktop/willUse/project-manager/src/components/Project.vue?vue&type=style&index=0&id=5dd84899&scoped=true&lang=css&","dependencies":[{"path":"/home/jesuskostov/Desktop/willUse/project-manager/src/components/Project.vue","mtime":1610225091674},{"path":"/home/jesuskostov/Desktop/willUse/project-manager/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jesuskostov/Desktop/willUse/project-manager/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jesuskostov/Desktop/willUse/project-manager/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jesuskostov/Desktop/willUse/project-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jesuskostov/Desktop/willUse/project-manager/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hbGVydCB7CiAgICBjb2xvcjogI2ZmZgp9Cg=="},{"version":3,"sources":["Project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA","file":"Project.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"card-header\">\n        <h4>{{project.name}}</h4>\n        </div>\n        <div class=\"card-body text-left\">\n        <p>{{project.description}}</p>\n        <div v-for=\"(task, i) in tasks\" :key=\"i\" class=\"alert alert-primary\">\n            <p>{{task.name}} </p>\n        </div>\n            <!-- <button v-if=\"!task.progress\" @click=\"complete(task.name, i)\">complete</button> -->\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'project',\n    props: ['id'],\n    computed: {\n        project() {\n            return this.$store.state.project\n        },\n        tasks() {\n            return this.$store.state.tasks\n        }\n    },\n    watch: {\n        tasks() {\n            let projectID = this.id\n            this.$store.dispatch('getProject', projectID)\n        }\n    },\n    methods: {\n        complete(name, i) {\n            let projectID = this.id\n            let taskID = i\n            let taskName = name\n            this.$store.dispatch('completeTask', {projectID, taskID, taskName})\n        }\n    },\n    async created() {\n        let projectID = this.id\n        this.$store.dispatch('getProject', projectID)\n    }\n}\n</script>\n\n<style scoped>\n.alert {\n    color: #fff\n}\n</style>"]}]}